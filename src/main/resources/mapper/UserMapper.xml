<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vp.account.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.vp.account.domain.entity.User">
    <!--@mbg.generated-->
    <id column="uid" jdbcType="INTEGER" property="uid" />
    <result column="last_login" jdbcType="TIMESTAMP" property="lastLogin" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    `uid`, last_login, `name`, `password`, icon, create_date, `status`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from user
    where `uid` = #{uid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from user
    where `uid` = #{uid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="uid" keyProperty="uid" parameterType="com.vp.account.domain.entity.User" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into user (last_login, `name`, `password`, 
      icon, create_date, `status`
      )
    values (#{lastLogin,jdbcType=TIMESTAMP}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{icon,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="uid" keyProperty="uid" parameterType="com.vp.account.domain.entity.User" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="lastLogin != null">
        last_login,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="icon != null">
        icon,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="status != null">
        `status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="lastLogin != null">
        #{lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.vp.account.domain.entity.User">
    <!--@mbg.generated-->
    update user
    <set>
      <if test="lastLogin != null">
        last_login = #{lastLogin,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where `uid` = #{uid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.vp.account.domain.entity.User">
    update user
    set last_login = #{lastLogin,jdbcType=TIMESTAMP},
      `name` = #{name,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=INTEGER}
    where `uid` = #{uid,jdbcType=INTEGER}
  </update>

    <select id="findByName" resultMap="BaseResultMap">
        SELECT u.last_login, uid, name, password, icon, create_date, status
        FROM  user u
        WHERE name=#{username}
    </select>
</mapper>